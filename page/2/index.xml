<?xml-stylesheet href="/rss.xsl" type="text/xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>KRAPSHSA'S BLOG</title><link>https://krapshsa.github.io/</link><description>Recent content on KRAPSHSA'S BLOG</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>© 2007 - 2022 krapshsa</copyright><lastBuildDate>Wed, 24 Aug 2022 00:25:00 +0800</lastBuildDate><atom:link href="https://krapshsa.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>在 template literal 中使用函數</title><link>https://krapshsa.github.io/posts/template-literal-bea4efe5-2565-42f7-832f-580089f7807d/</link><pubDate>Tue, 21 Jun 2022 16:18:00 +0800</pubDate><guid>https://krapshsa.github.io/posts/template-literal-bea4efe5-2565-42f7-832f-580089f7807d/</guid><description>KRAPSHSA'S BLOG https://krapshsa.github.io/posts/template-literal-bea4efe5-2565-42f7-832f-580089f7807d/ -&lt;h2 id="起因">起因&lt;/h2>
&lt;p>在 Code Review 的時候，同事原本是使用多次字串相接&lt;/p>
&lt;pre tabindex="0">&lt;code>const object1 = {
a: &amp;#39;somestring&amp;#39;,
b: 42
};
let html = `&amp;lt;ul&amp;gt;`;
for (const [key, value] of Object.entries(object1)) {
html += `&amp;lt;li&amp;gt;${key}: ${value}&amp;lt;/li&amp;gt;`;
}
html += `&amp;lt;/ul&amp;gt;`;
&lt;/code>&lt;/pre>&lt;p>後來想要表達出 html 的階層結構，想用使用巢狀的方式使用 template literal&lt;/p>
&lt;br>
&lt;h2 id="解方">解方&lt;/h2>
&lt;p>要用 function 來做的話可以使用 IIFE&lt;/p>
&lt;pre tabindex="0">&lt;code>const object1 = {
a: &amp;#39;somestring&amp;#39;,
b: 42
};
let html = `
&amp;lt;ul&amp;gt;
${
(function(){
let list = &amp;#39;&amp;#39;;
for (const [key, value] of Object.entries(object1)) {
list += `&amp;lt;li&amp;gt;${key}: ${value}&amp;lt;/li&amp;gt;`;
}
return list;
})()
}
&amp;lt;/ul&amp;gt;
`;
&lt;/code>&lt;/pre>&lt;p>以我簡化的例子來說，使用 IIFE 看起來變得更複雜了，&lt;/p>
&lt;p>但是用在比較長的 &lt;code>html&lt;/code> 來說比較能看出結構&lt;/p>
&lt;p>&lt;a href="https://jsfiddle.net/4h2n9L8t/">JSFiddle&lt;/a>&lt;/p>
&lt;br>
&lt;h2 id="參考資料">參考資料&lt;/h2>
&lt;p>&lt;a href="https://flaviocopes.com/javascript-iife/">JavaScript Immediately-invoked Function Expressions (IIFE)&lt;/a>&lt;/p>
- https://krapshsa.github.io/posts/template-literal-bea4efe5-2565-42f7-832f-580089f7807d/ - © 2007 - 2022 krapshsa</description></item></channel></rss>